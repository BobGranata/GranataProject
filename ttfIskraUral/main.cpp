#include "cDbLoader.h"
#include "cDbQuery.h"


/**
 * У нас есть 5 фирм – продавцов фруктов, от каждой фирмы мы получаем список того, что она хочет иметь.
 * Список этот – это файл в формате название товара (фрукта), максимальная цена, производитель товара (желаемый),
 * количество (в килограммах). Каждая запись в одну строку, поля разделяются запятыми.
 *
 * И есть у нас три человека, которым нужны результаты обработки этих файлов – первому в виде списка для производителя 1,
 * второму для другого производителя и третьему нужна информация по всем яблокам. Т.е. этих людей интересует кто и
 * сколько товара заказал.
 *
 * Нужно написать программу на С/С++, которая будет принимать пять файлов и на выходе давать три файла.
 * Еще если время позволит и будет желание было бы интересно чтобы эта программка получала файлы динамически,
 * т.е. отслеживала бы содержимое каталога с входными файлами, и если они изменились, то обновляла бы и результирующие
 * три файла.
 */

int main(int argumentcount, char *args[])
{
    if (argumentcount < 5)
        return -1;

    string dirIn = args[0];
    string dirOut = args[1];
    string producerName1 = args[2];
    string producerOther = args[3];
    string fruitName = args[4];

    // dbLoader смотрит все файлы в указанной директории.
    // На каждый файлик он создаёт объект "Фирмы", который заносится в массив.
    // В объекте каждой фирмы хранится список запросов на фрукты.
    shared_ptr<iDbLoader> dbLoader(new cDbLoader());
    dbLoader->initDb(dirIn);

    // Первым параметром передаётся имя файла, в который будут записаны данные отчёта
    // Второй параметр, это значения параметра по которому будет осуществленна выборка
    // Тертий это ключ, 0 - производитель, 1 - название фрукта.
    shared_ptr<iDbQuery> dbQuery(new cDbQuery(dbLoader.get()));
    dbQuery->getReportByParam(dirOut + "\\1.txt", producerName1, 0);

    dbQuery->getReportByParam(dirOut + "\\2.txt", producerOther, 0);

    dbQuery->getReportByParam(dirOut + "\\3.txt", fruitName, 1);

    cout << "End!" << endl;
    return 0;
}


